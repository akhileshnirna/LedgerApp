openapi: 3.0.4
info:
  title: Swagger Petstore - OpenAPI 3.0
  description: |-
    This is a simple documentation of a double-entry ledger API.
  version: 1.0.12
servers:
  - url: http://localhost:8080/api/v1/ledger
tags:
  - name: Ledger
    description: Interact with transactions

paths:
  /transaction:
    post:
      tags:
        - Ledger
      summary: Record multiple transactions.
      description: Record multiple transactions.
      operationId: RecordTransaction
      requestBody:
        description: Record multiple transactions
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transaction'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Validation in atleast one of the transactions failed. This will fail the entire transaction.
          content:
            application/json:
              schema:
                type: string

  /balance/{accountType}:
    get:
      tags:
        - Ledger
      summary: Get Transactions associated with an accountType
      description: Get Transactions associated with an accountType
      parameters:
        - name: accountType
          in: path
          required: true
          schema:
            type: string
            enum: [ASSET, LIABILITY, EQUITY, REVENUE, EXPENSE]
          description: Type of the account.

      responses:
        200:
          description: Return a balance value for the specified accountType
          content:
            application/json:
              schema:
                type: number
                format: decimal
        400:
          description: Bad Request if accounType is invalid
        404:
          description: AccountType not found
  /history:
    get:
      tags:
        - Ledger
      summary: Get Transactions associated with an accountType
      description: Record multiple transactions.
      parameters:
        - name: from
          in: query
          required: false
          schema:
            type: string
            format: date
          description: Start date for filtering transactions
        - name: to
          in: query
          required: false
          schema:
            type: string
            format: date
          description: End date for filtering transactions
      responses:
        200:
          description: Return a list of transactions sorted by date for that accountType
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Entry'
        400:
          description: Bad Request if any of the parameters are not valid
        404:
          description: AccountType not found



components:
  schemas:
    Transaction:
      type: object
      required:
         - entries
      properties:
        entries:
          type: array
          items:
            $ref: '#/components/schemas/DoubleEntry'
    DoubleEntry:
      type: object
      description: Used to represent a double entry transaction.
      required:
        - debit
        - credit
      properties:
        debit:
          $ref: '#/components/schemas/Entry'
        credit:
          $ref: '#/components/schemas/Entry'
    Entry:
      type: object
      required:
        - timestamp
        - amount
        - accountType
        - transactionType
      properties:
        transactionType:
          type: string
          enum:
            - DEBIT
            - CREDIT
          description: Specifies whether the given transaction was a DEBIT or a CREDIT.
        timestamp:
            type: string
            format: date-time
            description: The date-time on which this transaction occurred.
        amount:
          type: number
          format: decimal
          description: The amount associated with the transaction.
        accountType:
          type: string
          description: Type of the account. Supported values are  [ASSET, LIABILITY, EQUITY, REVENUE, EXPENSE]